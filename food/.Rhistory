if(j %in% c("county","tract","block group")){
out<-out[substr(out$GEOID,1,2) %in% inc,]
}
write.table(out,paste0(output,"food/food_",k,"_imputed_pca_",j,"_",i,".csv"),sep=",",col.names=T,row.names=F)
}else{
out<-pullACS(geography=j,variables=c("B01001_001","B25001_001","B26001_001"),geometry=F,year=i,state=NULL,impute=T,calc="food")
if(j %in% c("county","tract","block group")){
out<-out[substr(out$GEOID,1,2) %in% inc,]
}
write.table(out,paste0(output,"food/food_",k,"_imputed_pca_",j,"_",i,".csv"),sep=",",col.names=T,row.names=F)
}
}
}
}
}
ex<-dir(paste0(output,"food/"))
ex<-ex[str_detect(ex,"rpart_")&str_detect(ex,"block group")==F]
for(i in ex){
imp<-read.csv(paste0(output,"food/",i),header=T)
ori<-read.csv(paste0(output,"food/food_original_pca_",substr(i,str_locate(i,pattern="pca_")[2][[1]]+1,nchar(i))),header=T)
new<-merge(imp,ori,by="GEOID",all=T)
charlim<-ifelse(str_detect(i,"county"),5,
ifelse(str_detect(i,"zcta")|str_detect(i,"zip code tabulation area"),5,
ifelse(str_detect(i,"tract"),11,
ifelse(str_detect(i,"block group"),12,NA))))
new$GEOID<-ifelse(nchar(new$GEOID)!=charlim,str_pad(new$GEOID,width=charlim,side="left",pad="0"),new$GEOID)
new$sumlevel<-ifelse(
nchar(new$GEOID)==5&str_detect(new$NAME.y,"ZCTA")==F,"050",
ifelse(
nchar(new$GEOID)==5&str_detect(new$NAME.y,"ZCTA")==T,"860",
ifelse(
nchar(new$GEOID)==11,"140",
ifelse(
nchar(new$GEOID)==12,"150",NA
)
)
)
)
new$source<-"ACS5"
new$year<-substr(i,nchar(i)-7,nchar(i)-4)
new$geolevel<-ifelse(
new$sumlevel=="050","county",
ifelse(new$sumlevel=="860","zcta",
ifelse(new$sumlevel=="140","tract",
ifelse(new$sumlevel=="150","bg",NA)))
)
new$geoname<-new$NAME.x
new$type<-ifelse(
is.na(new$food_rnk.x)&(new$B01001_001.x<=100|new$B25001_001.x<=30|(new$B26001_001.x/new$B01001_001.x)<=0.333),"suppressed",
ifelse(
is.na(new$food_rnk.y)&is.na(new$food_rnk.x),"missing",
ifelse(
!is.na(new$food_rnk.y)&!is.na(new$food_rnk.x),"original",
ifelse(
is.na(new$food_rnk.y)&!is.na(new$food_rnk.x),"imputed",
NA
)
)
)
)
new$geoid<-paste0(new$sumlevel,"00US",new$GEOID)
new$food_score<-round(new$food_score.x,4)
new$food_rnk<-round(new$food_rnk.x,4)
new$food_state_rnk<-round(new$food_state_rnk.x,4)
out<-new[,c("geoid","geoname","geolevel","sumlevel","year","source","type",
#"financial_score","ownership_score","building_quality_score","crowding_score",
"food_score","food_rnk","food_state_rnk")]
write.table(out,paste0(output,"food/combined food index 2019-2023.csv"),sep=",",qmethod="double",row.names=F,col.names=T,append=T)
print(out[1,])
}
out<-read.csv(paste0(output,"food/combined food index 2019-2023.csv"),header=T)
out<-out[out$year %in% c(2019,2023)&out$geolevel %in% c("county","tract"),
c("geoid","geoname","geolevel","sumlevel","year",
#"financial_score","ownership_score","building_quality_score","crowding_score",
"food_score","food_rnk","food_state_rnk")]
write.table(out,paste0(output,"food/brief food index 2019-2023.csv"),sep=",",qmethod="double",row.names=F,col.names=T)
setwd("C:/Users/chris/OneDrive/Desktop/GeoHealth/data/food/plots/")
source("https://raw.githubusercontent.com/grimnr14/R-functions/refs/heads/main/flatMap.R")
library(stringr)
library(zippeR)
for(y in c(2019,2023)){
for(g in c("county",
"zcta","tract"
)){
for(l in c("food_rnk","food_state_rnk","food_score")){
if(y==2019&g=="zcta"){
g<-"zip code tabulation area"
if(g=="zcta"|g=="zip code tabulation area"){
state.list<-NULL
}
}else{
state.list<-state.abb
}
d1<-read.csv(paste0("../food_original_pca_",g,"_",y,".csv"),header=T)
d1$GEOID<-ifelse(nchar(d1$GEOID)!=5&g=="county",paste0("0",d1$GEOID),as.character(d1$GEOID))
d1$GEOID<-ifelse(nchar(d1$GEOID)!=5&(g=="zcta"|g=="zip code tabulation area"),str_pad(d1$GEOID,side="left",width=5,pad="0"),as.character(d1$GEOID))
d1$GEOID<-ifelse(nchar(d1$GEOID)!=11&g=="tract",paste0("0",d1$GEOID),as.character(d1$GEOID))
d1<-d1[!is.na(d1$food_rnk),c("GEOID","NAME",l)]
for(s in state.list){
code<-fips_codes[fips_codes$state==s,]
zips<-zippeR::zi_list_zctas(year=y,state=code$state_code[1],method="intersect")
if(g=="county"){
png(paste0("food_",s,"_",g,"_",y,"_",l,".png"),width=1600,height=1600)
print(flat_map(data=d1[d1$GEOID %in% paste0(code$state_code,code$county_code),],
year=ifelse(y<2020,2010,2020),state=s,var=l,geography=ifelse(g=="zcta"|g=="zip code tabulation area","zcta5",g),geoid="GEOID",palette="RdBu",bin=8,type="flat"))
dev.off()
}
if(g=="zcta"|g=="zip code tabulation area"){
png(paste0("food_",s,"_",g,"_",y,"_",l,".png"),width=1600,height=1600)
print(flat_map(data=d1[d1$GEOID %in% zips,],
year=ifelse(y<2020,2010,2020),state=s,var=l,geography=ifelse(g=="zcta"|g=="zip code tabulation area","zcta5",g),geoid="GEOID",palette="RdBu",bin=8,type="flat"))
dev.off()
}
if(g=="tract"){
png(paste0("food_",s,"_",g,"_",y,"_",l,".png"),width=1600,height=1600)
print(flat_map(data=d1[substr(d1$GEOID,1,5) %in% paste0(code$state_code,code$county_code),],
year=ifelse(y<2020,2010,2020),state=s,var=l,geography=ifelse(g=="zcta"|g=="zip code tabulation area","zcta5",g),geoid="GEOID",palette="RdBu",bin=8,type="flat"))
dev.off()
}
}
}
}
}
#zcta="https://raw.githubusercontent.com/grimnr14/geohealthdb/refs/heads/main/mapping_file_zcta_tract_fips_2020.txt",
#year.map=2010
){
fara.year<-ifelse(year>=2019,"2019",
ifelse(year>=2015,"2015","2010"))
fea.year<-ifelse(year>=2019,"2019",
ifelse(year>=2017,"2017",
ifelse(year>=2015,"2015",
ifelse(year>=2014,"2015",
ifelse(year>=2012,"2012","2011")))))
year.map<-ifelse(year>=2020,"2020","2010")
if(year.map=="2020"){
fips.convert<-read.table("https://www2.census.gov/geo/docs/maps-data/data/rel2020/blkgrp/tab20_blkgrp20_blkgrp10_natl.txt",header=T,sep="|")[,c("GEOID_BLKGRP_20","GEOID_BLKGRP_10")]
fips.convert$GEOID_BLKGRP_20<-str_pad(fips.convert$GEOID_BLKGRP_20,width=12,side="left",pad="0")
fips.convert$GEOID_BLKGRP_10<-str_pad(fips.convert$GEOID_BLKGRP_10,width=12,side="left",pad="0")
fips.convert$tract10<-substr(fips.convert$GEOID_BLKGRP_10,1,11)
fips.convert$tract20<-substr(fips.convert$GEOID_BLKGRP_20,1,11)
fips.convert<-fips.convert[,c("tract10","tract20")]
fips.convert<-fips.convert[!duplicated(fips.convert),]
}
if(geography=="zcta"){
zcta=paste0("https://raw.githubusercontent.com/grimnr14/geohealthdb/refs/heads/main/mapping_file_zcta_bg_fips_",year.map,".csv")
#map1<-read.csv(zcta,header=T,sep="|")
map1<-read.csv(zcta,header=T,sep=",")
names(map1)<-c("GEOID","LAT","LONG","parse","ZCTA","NAME")
#map1$GEOID<-map1[,str_detect(names(map1),"GEOID_TRACT")]
#map1$ZCTA<-map1[,str_detect(names(map1),"GEOID_ZCTA5_")]
map1<-map1[,c("GEOID","ZCTA")]
map1<-map1[!duplicated(map1),]
map1$GEOID<-str_pad(as.character(map1$GEOID),width=12,side="left",pad="0")
map1$GEOID<-substr(map1$GEOID,1,11)
map1$ZCTA<-str_pad(as.character(map1$ZCTA),width=5,side="left",pad="0")
map1<-map1[!duplicated(map1),]
if(year>=2020){
map1<-merge(map1,fips.convert,by.x="GEOID",by.y="tract20",all.x=T)
map1$GEOID<-map1$tract10
map1<-map1[!is.na(map1$GEOID),c("GEOID","ZCTA")]
map1<-map1[!duplicated(map1),]
}
}
#pop<-pullACS(geography=geography,year=year,geometry=F)
fara<-read.csv(paste0("https://raw.githubusercontent.com/grimnr14/geohealthdb/refs/heads/main/FARA%20estimates%20",fara.year,".csv"),header=T)
#read.csv("https://raw.githubusercontent.com/grimnr14/geohealthdb/refs/heads/main/FARA%20estimates%202019.csv",header=T)
fara<-fara[fara$year==fara.year,]
fara<-as.data.frame(sapply(fara,as.numeric))
fara$CensusTract<-str_pad(as.character(fara$CensusTract),width=11,side="left",pad="0")
if(year>=2020){
fara<-merge(fara,fips.convert,by.x="CensusTract",by.y="tract10",all.x=T)
fara$CensusTract<-fara$tract20
fara<-fara[,!names(fara) %in% c("tract10","tract20")]
fara<-fara[!duplicated(fara),]
fara<-fara%>%
group_by(CensusTract)%>%
summarise_each(funs(mean(.,na.rm=TRUE)))
fara<-fara[!duplicated(fara),]
fara<-as.data.frame(fara)
}
fara$POP2010<-(fara$lapophalf/(fara$lapophalfshare/100))
if(geography=="county"){
fara$CensusTract<-substr(fara$CensusTract,1,5)
fara[is.na(fara)]<-0
fara<-as.data.frame(fara)
fara<-fara%>%
group_by(CensusTract)%>%
summarise_each(funs="sum")
}
if(geography=="zcta"){
fara<-merge(fara,map1,by.x="CensusTract",by.y="GEOID",all.x=T)
fara<-fara[!is.na(fara$ZCTA),]
fara$CensusTract<-fara$ZCTA
fara<-fara[,!names(fara) %in% c("ZCTA")]
fara[is.na(fara)]<-0
fara<-as.data.frame(fara)
fara<-fara%>%
group_by(CensusTract)%>%
summarise_each(funs="sum")
}
fara[is.na(fara)]<-0
#  fara<-merge(fara,pop,by.x="CensusTract",by.y="GEOID",all.x=T)#we can use current year pop assuming static rate to calc estimated counts of residents by year
vars<-c("CensusTract","POP2010",
"lapophalf","lakidshalf","laseniorshalf","lasnaphalf",
"lapop1","lakids1","laseniors1","lasnap1",
"lapop10","lakids10","laseniors10","lasnap10",
"lapophalfshare","lakidshalfshare","laseniorshalfshare","lasnaphalfshare",
"lapop1share","lakids1share","laseniors1share","lasnap1share",
"lapop10share","lakids10share","laseniors10share","lasnap10share"
)
fara<-fara[,vars]
fea<-read.csv(paste0("https://raw.githubusercontent.com/grimnr14/geohealthdb/refs/heads/main/FoodEnvironmentAtlas",fea.year,".csv"),header=T)
rnk<-as.numeric(substr(names(fea),nchar(names(fea))-1,nchar(names(fea))))
rnk<-ordered(rnk)
rnk<-levels(rnk)[(length(levels(rnk))-2):length(levels(rnk))]
fea<-fea[,c("FIPS","State","County",names(fea)[substr(names(fea),nchar(names(fea))-1,nchar(names(fea))) %in% rnk])]
names(fea)<-gsub("[0-9_]","",names(fea))
fea$FIPS<-str_pad(as.character(fea$FIPS),width=5,side="left",pad="0")
fea<-fea[,!duplicated(names(fea))]
#the PTH features are all rates per 1,000 residents in corresponding year population from file
fea$yearPop<-1000*fea$GROC/fea$GROCPTH
if(geography=="county"){
fea$GEOID<-fea$FIPS
}
if(geography=="zcta"){
map2<-map1
map2$GEOID<-substr(map2$GEOID,1,5)
map2<-map2[!duplicated(map2)&!is.na(map2$ZCTA),]
fea<-merge(fea,map2,by.x="FIPS",by.y="GEOID",all.x=T)
fea$GEOID<-fea$ZCTA
}
if(geography=="tract"){
map2<-data.frame(tract=fara$CensusTract,county=rep(NA,nrow(fara)))
map2<-map2[!duplicated(map2),]
map2$county<-substr(map2$tract,1,5)
fea<-merge(fea,map2,by.x="FIPS",by.y="county",all.x=T)
fea$GEOID<-fea$tract
}
food<-merge(fea,fara,by.x="GEOID",by.y="CensusTract",all=T)#note censustract is really the same level as geoid at this point
food<-food[!duplicated(food),]
food[,!names(food) %in% c("FIPS","State","County")]
#zcta="https://raw.githubusercontent.com/grimnr14/geohealthdb/refs/heads/main/mapping_file_zcta_tract_fips_2020.txt",
#year.map=2010
){
fara.year<-ifelse(year>=2019,"2019",
ifelse(year>=2015,"2015","2010"))
fea.year<-ifelse(year>=2019,"2019",
ifelse(year>=2017,"2017",
ifelse(year>=2015,"2015",
ifelse(year>=2014,"2015",
ifelse(year>=2012,"2012","2011")))))
year.map<-ifelse(year>=2020,"2020","2010")
if(year.map=="2020"){
fips.convert<-read.table("https://www2.census.gov/geo/docs/maps-data/data/rel2020/blkgrp/tab20_blkgrp20_blkgrp10_natl.txt",header=T,sep="|")[,c("GEOID_BLKGRP_20","GEOID_BLKGRP_10")]
fips.convert$GEOID_BLKGRP_20<-str_pad(fips.convert$GEOID_BLKGRP_20,width=12,side="left",pad="0")
fips.convert$GEOID_BLKGRP_10<-str_pad(fips.convert$GEOID_BLKGRP_10,width=12,side="left",pad="0")
fips.convert$tract10<-substr(fips.convert$GEOID_BLKGRP_10,1,11)
fips.convert$tract20<-substr(fips.convert$GEOID_BLKGRP_20,1,11)
fips.convert<-fips.convert[,c("tract10","tract20")]
fips.convert<-fips.convert[!duplicated(fips.convert),]
}
if(geography=="zcta"){
zcta=paste0("https://raw.githubusercontent.com/grimnr14/geohealthdb/refs/heads/main/mapping_file_zcta_bg_fips_",year.map,".csv")
#map1<-read.csv(zcta,header=T,sep="|")
map1<-read.csv(zcta,header=T,sep=",")
names(map1)<-c("GEOID","LAT","LONG","parse","ZCTA","NAME")
#map1$GEOID<-map1[,str_detect(names(map1),"GEOID_TRACT")]
#map1$ZCTA<-map1[,str_detect(names(map1),"GEOID_ZCTA5_")]
map1<-map1[,c("GEOID","ZCTA")]
map1<-map1[!duplicated(map1),]
map1$GEOID<-str_pad(as.character(map1$GEOID),width=12,side="left",pad="0")
map1$GEOID<-substr(map1$GEOID,1,11)
map1$ZCTA<-str_pad(as.character(map1$ZCTA),width=5,side="left",pad="0")
map1<-map1[!duplicated(map1),]
if(year>=2020){
map1<-merge(map1,fips.convert,by.x="GEOID",by.y="tract20",all.x=T)
map1$GEOID<-map1$tract10
map1<-map1[!is.na(map1$GEOID),c("GEOID","ZCTA")]
map1<-map1[!duplicated(map1),]
}
}
#pop<-pullACS(geography=geography,year=year,geometry=F)
fara<-read.csv(paste0("https://raw.githubusercontent.com/grimnr14/geohealthdb/refs/heads/main/FARA%20estimates%20",fara.year,".csv"),header=T)
#read.csv("https://raw.githubusercontent.com/grimnr14/geohealthdb/refs/heads/main/FARA%20estimates%202019.csv",header=T)
fara<-fara[fara$year==fara.year,]
fara<-as.data.frame(sapply(fara,as.numeric))
fara$CensusTract<-str_pad(as.character(fara$CensusTract),width=11,side="left",pad="0")
if(year>=2020){
fara<-merge(fara,fips.convert,by.x="CensusTract",by.y="tract10",all.x=T)
fara$CensusTract<-fara$tract20
fara<-fara[,!names(fara) %in% c("tract10","tract20")]
fara<-fara[!duplicated(fara),]
fara<-fara%>%
group_by(CensusTract)%>%
summarise_each(funs(mean(.,na.rm=TRUE)))
fara<-fara[!duplicated(fara),]
fara<-as.data.frame(fara)
}
fara$POP2010<-(fara$lapophalf/(fara$lapophalfshare/100))
if(geography=="county"){
fara$CensusTract<-substr(fara$CensusTract,1,5)
fara[is.na(fara)]<-0
fara<-as.data.frame(fara)
fara<-fara%>%
group_by(CensusTract)%>%
summarise_each(funs="sum")
}
if(geography=="zcta"){
fara<-merge(fara,map1,by.x="CensusTract",by.y="GEOID",all.x=T)
fara<-fara[!is.na(fara$ZCTA),]
fara$CensusTract<-fara$ZCTA
fara<-fara[,!names(fara) %in% c("ZCTA")]
fara[is.na(fara)]<-0
fara<-as.data.frame(fara)
fara<-fara%>%
group_by(CensusTract)%>%
summarise_each(funs="sum")
}
fara[is.na(fara)]<-0
#  fara<-merge(fara,pop,by.x="CensusTract",by.y="GEOID",all.x=T)#we can use current year pop assuming static rate to calc estimated counts of residents by year
vars<-c("CensusTract","POP2010",
"lapophalf","lakidshalf","laseniorshalf","lasnaphalf",
"lapop1","lakids1","laseniors1","lasnap1",
"lapop10","lakids10","laseniors10","lasnap10",
"lapophalfshare","lakidshalfshare","laseniorshalfshare","lasnaphalfshare",
"lapop1share","lakids1share","laseniors1share","lasnap1share",
"lapop10share","lakids10share","laseniors10share","lasnap10share"
)
fara<-fara[,vars]
fea<-read.csv(paste0("https://raw.githubusercontent.com/grimnr14/geohealthdb/refs/heads/main/FoodEnvironmentAtlas",fea.year,".csv"),header=T)
rnk<-as.numeric(substr(names(fea),nchar(names(fea))-1,nchar(names(fea))))
rnk<-ordered(rnk)
rnk<-levels(rnk)[(length(levels(rnk))-2):length(levels(rnk))]
fea<-fea[,c("FIPS","State","County",names(fea)[substr(names(fea),nchar(names(fea))-1,nchar(names(fea))) %in% rnk])]
names(fea)<-gsub("[0-9_]","",names(fea))
fea$FIPS<-str_pad(as.character(fea$FIPS),width=5,side="left",pad="0")
fea<-fea[,!duplicated(names(fea))]
#the PTH features are all rates per 1,000 residents in corresponding year population from file
fea$yearPop<-1000*fea$GROC/fea$GROCPTH
if(geography=="county"){
fea$GEOID<-fea$FIPS
}
if(geography=="zcta"){
map2<-map1
map2$GEOID<-substr(map2$GEOID,1,5)
map2<-map2[!duplicated(map2)&!is.na(map2$ZCTA),]
fea<-merge(fea,map2,by.x="FIPS",by.y="GEOID",all.x=T)
fea$GEOID<-fea$ZCTA
}
if(geography=="tract"){
map2<-data.frame(tract=fara$CensusTract,county=rep(NA,nrow(fara)))
map2<-map2[!duplicated(map2),]
map2$county<-substr(map2$tract,1,5)
fea<-merge(fea,map2,by.x="FIPS",by.y="county",all.x=T)
fea$GEOID<-fea$tract
}
food<-merge(fea,fara,by.x="GEOID",by.y="CensusTract",all=T)#note censustract is really the same level as geoid at this point
food<-food[!duplicated(food),]
food[,!names(food) %in% c("FIPS","State","County")]
fea<-read.csv(paste0("https://raw.githubusercontent.com/grimnr14/geohealthdb/refs/heads/main/FoodEnvironmentAtlas",fea.year,".csv"),header=T)
rnk<-as.numeric(substr(names(fea),nchar(names(fea))-1,nchar(names(fea))))
rnk<-ordered(rnk)
rnk<-levels(rnk)[(length(levels(rnk))-2):length(levels(rnk))]
fea<-fea[,c("FIPS","State","County",names(fea)[substr(names(fea),nchar(names(fea))-1,nchar(names(fea))) %in% rnk])]
names(fea)<-gsub("[0-9_]","",names(fea))
fea$FIPS<-str_pad(as.character(fea$FIPS),width=5,side="left",pad="0")
fea<-fea[,!duplicated(names(fea))]
head(fea)
fea<-read.csv(paste0("https://raw.githubusercontent.com/grimnr14/geohealthdb/refs/heads/main/FoodEnvironmentAtlas",fea.year,".csv"),header=T)
head(fea)
rnk<-as.numeric(substr(names(fea),nchar(names(fea))-1,nchar(names(fea))))
rnk<-ordered(rnk)
rnk<-levels(rnk)[(length(levels(rnk))-2):length(levels(rnk))]
fea.year
"https://raw.githubusercontent.com/grimnr14/geohealthdb/refs/heads/main/FoodEnvironmentAtlas2019.csv"
paste0("https://raw.githubusercontent.com/grimnr14/geohealthdb/refs/heads/main/FoodEnvironmentAtlas",fea.year,".csv")
fea<-read.csv(paste0("https://raw.githubusercontent.com/grimnr14/geohealthdb/refs/heads/main/FoodEnvironmentAtlas",fea.year,".csv"),header=T)
#retrieve data from github and convert to full fips and zcta mapping
#requires fips->zcta mapping file
library(tidyverse)
library(stringr)
library(sf)
library(readxl)
library(tigris)
library(censusxy)
prepFood<-function(year=2019,geography="county"#,
#zcta="https://raw.githubusercontent.com/grimnr14/geohealthdb/refs/heads/main/mapping_file_zcta_tract_fips_2020.txt",
#year.map=2010
){
fara.year<-ifelse(year>=2019,"2019",
ifelse(year>=2015,"2015","2010"))
fea.year<-ifelse(year>=2019,"2019",
ifelse(year>=2017,"2017",
ifelse(year>=2015,"2015",
ifelse(year>=2014,"2015",
ifelse(year>=2012,"2012","2011")))))
year.map<-ifelse(year>=2020,"2020","2010")
if(year.map=="2020"){
fips.convert<-read.table("https://www2.census.gov/geo/docs/maps-data/data/rel2020/blkgrp/tab20_blkgrp20_blkgrp10_natl.txt",header=T,sep="|")[,c("GEOID_BLKGRP_20","GEOID_BLKGRP_10")]
fips.convert$GEOID_BLKGRP_20<-str_pad(fips.convert$GEOID_BLKGRP_20,width=12,side="left",pad="0")
fips.convert$GEOID_BLKGRP_10<-str_pad(fips.convert$GEOID_BLKGRP_10,width=12,side="left",pad="0")
fips.convert$tract10<-substr(fips.convert$GEOID_BLKGRP_10,1,11)
fips.convert$tract20<-substr(fips.convert$GEOID_BLKGRP_20,1,11)
fips.convert<-fips.convert[,c("tract10","tract20")]
fips.convert<-fips.convert[!duplicated(fips.convert),]
}
if(geography=="zcta"){
zcta=paste0("https://raw.githubusercontent.com/grimnr14/geohealthdb/refs/heads/main/mapping_file_zcta_bg_fips_",year.map,".csv")
#map1<-read.csv(zcta,header=T,sep="|")
map1<-read.csv(zcta,header=T,sep=",")
names(map1)<-c("GEOID","LAT","LONG","parse","ZCTA","NAME")
#map1$GEOID<-map1[,str_detect(names(map1),"GEOID_TRACT")]
#map1$ZCTA<-map1[,str_detect(names(map1),"GEOID_ZCTA5_")]
map1<-map1[,c("GEOID","ZCTA")]
map1<-map1[!duplicated(map1),]
map1$GEOID<-str_pad(as.character(map1$GEOID),width=12,side="left",pad="0")
map1$GEOID<-substr(map1$GEOID,1,11)
map1$ZCTA<-str_pad(as.character(map1$ZCTA),width=5,side="left",pad="0")
map1<-map1[!duplicated(map1),]
if(year>=2020){
map1<-merge(map1,fips.convert,by.x="GEOID",by.y="tract20",all.x=T)
map1$GEOID<-map1$tract10
map1<-map1[!is.na(map1$GEOID),c("GEOID","ZCTA")]
map1<-map1[!duplicated(map1),]
}
}
#pop<-pullACS(geography=geography,year=year,geometry=F)
fara<-read.csv(paste0("https://raw.githubusercontent.com/grimnr14/geohealthdb/refs/heads/main/FARA%20estimates%20",fara.year,".csv"),header=T)
#read.csv("https://raw.githubusercontent.com/grimnr14/geohealthdb/refs/heads/main/FARA%20estimates%202019.csv",header=T)
fara<-fara[fara$year==fara.year,]
fara<-as.data.frame(sapply(fara,as.numeric))
fara$CensusTract<-str_pad(as.character(fara$CensusTract),width=11,side="left",pad="0")
if(year>=2020){
fara<-merge(fara,fips.convert,by.x="CensusTract",by.y="tract10",all.x=T)
fara$CensusTract<-fara$tract20
fara<-fara[,!names(fara) %in% c("tract10","tract20")]
fara<-fara[!duplicated(fara),]
fara<-fara%>%
group_by(CensusTract)%>%
summarise_each(funs(mean(.,na.rm=TRUE)))
fara<-fara[!duplicated(fara),]
fara<-as.data.frame(fara)
}
fara$POP2010<-(fara$lapophalf/(fara$lapophalfshare/100))
if(geography=="county"){
fara$CensusTract<-substr(fara$CensusTract,1,5)
fara[is.na(fara)]<-0
fara<-as.data.frame(fara)
fara<-fara%>%
group_by(CensusTract)%>%
summarise_each(funs="sum")
}
if(geography=="zcta"){
fara<-merge(fara,map1,by.x="CensusTract",by.y="GEOID",all.x=T)
fara<-fara[!is.na(fara$ZCTA),]
fara$CensusTract<-fara$ZCTA
fara<-fara[,!names(fara) %in% c("ZCTA")]
fara[is.na(fara)]<-0
fara<-as.data.frame(fara)
fara<-fara%>%
group_by(CensusTract)%>%
summarise_each(funs="sum")
}
fara[is.na(fara)]<-0
#  fara<-merge(fara,pop,by.x="CensusTract",by.y="GEOID",all.x=T)#we can use current year pop assuming static rate to calc estimated counts of residents by year
vars<-c("CensusTract","POP2010",
"lapophalf","lakidshalf","laseniorshalf","lasnaphalf",
"lapop1","lakids1","laseniors1","lasnap1",
"lapop10","lakids10","laseniors10","lasnap10",
"lapophalfshare","lakidshalfshare","laseniorshalfshare","lasnaphalfshare",
"lapop1share","lakids1share","laseniors1share","lasnap1share",
"lapop10share","lakids10share","laseniors10share","lasnap10share"
)
fara<-fara[,vars]
fea<-read.csv(paste0("https://raw.githubusercontent.com/grimnr14/geohealthdb/refs/heads/main/FoodEnvironmentAtlas",fea.year,".csv"),header=T)
rnk<-as.numeric(substr(names(fea),nchar(names(fea))-1,nchar(names(fea))))
rnk<-ordered(rnk)
rnk<-levels(rnk)[(length(levels(rnk))-2):length(levels(rnk))]
fea<-fea[,c("FIPS","State","County",names(fea)[substr(names(fea),nchar(names(fea))-1,nchar(names(fea))) %in% rnk])]
names(fea)<-gsub("[0-9_]","",names(fea))
fea$FIPS<-str_pad(as.character(fea$FIPS),width=5,side="left",pad="0")
fea<-fea[,!duplicated(names(fea))]
#the PTH features are all rates per 1,000 residents in corresponding year population from file
fea$yearPop<-1000*fea$GROC/fea$GROCPTH
if(geography=="county"){
fea$GEOID<-fea$FIPS
}
if(geography=="zcta"){
map2<-map1
map2$GEOID<-substr(map2$GEOID,1,5)
map2<-map2[!duplicated(map2)&!is.na(map2$ZCTA),]
fea<-merge(fea,map2,by.x="FIPS",by.y="GEOID",all.x=T)
fea$GEOID<-fea$ZCTA
}
if(geography=="tract"){
map2<-data.frame(tract=fara$CensusTract,county=rep(NA,nrow(fara)))
map2<-map2[!duplicated(map2),]
map2$county<-substr(map2$tract,1,5)
fea<-merge(fea,map2,by.x="FIPS",by.y="county",all.x=T)
fea$GEOID<-fea$tract
}
food<-merge(fea,fara,by.x="GEOID",by.y="CensusTract",all=T)#note censustract is really the same level as geoid at this point
food<-food[!duplicated(food),]
food[,!names(food) %in% c("FIPS","State","County")]
}
testing<-F
if(testing==T){
ex<-prepFood(year=2020,geography="county")
ex<-prepFood(year=2019,geography="zcta")
ex<-prepFood(year=2023,geography="tract")
}
head(fea)
